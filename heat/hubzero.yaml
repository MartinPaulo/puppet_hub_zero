heat_template_version: 2013-05-23

description: A template to initiate the installation of hubZero on an instance in the NeCTAR cloud

# Because this file uses the get_file command, it can only be launched by the command line client
# eg:
#   heat stack-create --template-file=IdeaProjects/HubZeroPuppet/heat/hubzero.yaml \
#                     --environment-file=IdeaProjects/HubZeroPuppet/heat/environment.yaml \
#                     hubzero_test


parameter_groups:
- label: VM
  description: Configure the VM
  parameters:
  - image
  - flavor
  - availability_zone
  - hostname
  - nagiosservers
- label: Security
  description: Secret things.
  parameters:
  - key
  - nectar_user_id
  - swift_password
  - pgp_passphraze
- label: Other Things
  description: Not yet categorized.
  parameters:
  - email_postmaster
  - hub_zero_version
  - tenancy_name

parameters:
  image:
    type: string
    label: Image name or ID
    description: A member of the Debian GNU/Linux 6.x family
    default: NeCTAR Debian 6 x86_64 (Squeeze)

  flavor:
    type: string
    label: Flavor
    description: Type (size) of the instance to be created.
    default: m1.small
    constraints:
      - allowed_values: [m1.small, m1.medium, m1.large, m1.xlarge, m1.xxlarge]
        description: Must be a valid NeCTAR flavour.

  key:
    type: string
    label: Key Name
    description: Name of an existing key pair to enable SSH access to the instance.

  email_postmaster:
    type: string
    label: Postmaster Email Address
    description: The email address to be notified of events on the server (and also when the installation is complete).

  # should make the following totally PGP key dependent
  pgp_passphraze:
    type: string
    label: The password used to access Swift backups
    description: The password that gives absolute access to the Duplicity backups in Swift.
    hidden: true
    constraints: # update the environment_template.yaml if changing the constraints...
      - length: { min: 6 }
        description: The password length must be at least 6 characters long.

  hub_zero_version:
    type: string
    label: HubZero Version
    description: The version of HubZero to install.
    default: 1.3
    constraints:
      - allowed_values: [1.1, 1.2, 1.3, 1.3.1]
        description: Will install either 1.1.0, 1.2.2, or 1.3.0, or 1.3.1

  # the zones below support the sending of email
  availability_zone:
    type: string
    label: Availability Zone
    description: The NeCTAR zone in which the VM is to run
    default: melbourne-qh2
    constraints:
      - allowed_values: ["melbourne", "melbourne-qh2", "melbourne-np", "monash", "tasmania",  "NCI", "sa"]
        description: The NeCTAR zones in which the the instance can be launched.

  hostname:
    type: string
    label: The Hostname
    description: The fully quailified hostname for the installation - something along the lines of hubzero.v3.edu.au

  nagiosservers:
    type: string
    label: The Nagios Servers
    default: n1.v3apps.org.au, n2.v3apps.org.au
    description: A comma-delimited list of IP address or hostnames that are allowed to talk to the NRPE daemon. If you change these you need to edit the firewall rules after the deployment!

  nectar_user_id:
    type: string
    label: NeCTAR User ID
    description: The ID of the user associated with the the Swift password.

  swift_password:
    type: string
    label: Swift Command Line Password
    description: The command line password for the NeCTAR user who the app will be writing to Swift as.
    hidden: true

  tenancy_name:
    type: string
    label: The Project Name
    description: The project name

resources:

  # This gets overwritten
  my_sql_root_password:
    type: OS::Heat::RandomString

  # This gets overwritten
  slapd_root_password:
    type: OS::Heat::RandomString

  # This is just for monitoring
  nagios_mysql_password:
    type: OS::Heat::RandomString

  # more /etc/firewall_on shows:
  #   http, https, https-alt (?), dns (53), ssh, smtp, mysql (should we add this?), ldap (1170), icmp, 830/831 (submit?)
  hubZero_security_group:
    type: AWS::EC2::SecurityGroup
    properties:
      GroupDescription: Test group to demonstrate Neutron security group functionality with Heat.
      SecurityGroupIngress: [
        # https
        {CidrIp: 0.0.0.0/0, IpProtocol: tcp,  FromPort: '443', ToPort: '443'},
        # http
        {CidrIp: 0.0.0.0/0, IpProtocol: tcp,  FromPort: '80', ToPort: '80'},
        # nagios n1.v3apps.org.au
        {CidrIp: 115.146.85.205/32, IpProtocol: tcp, FromPort: '5666', ToPort: '5666'},
        # nagios n2.v3apps.org.au
        {CidrIp: 130.56.251.28/32, IpProtocol: tcp, FromPort: '5666', ToPort: '5666'},
        # ssh
        {CidrIp: 0.0.0.0/0, IpProtocol: tcp,  FromPort: '22', ToPort: '22'},
        # icmp
        {CidrIp: 0.0.0.0/0, IpProtocol: icmp, FromPort: '-1', ToPort: '-1'}]

  hubZero_instance:
    type: OS::Nova::Server
    properties:
      availability_zone: { get_param: availability_zone }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      security_groups: [{ get_resource: hubZero_security_group }]
      user_data:
        str_replace:
          params:
            __my_sql_root_password: {get_attr: [my_sql_root_password, value]}
            __slapd_root_password: {get_attr: [slapd_root_password, value]}
            __nagios_mysql_password: {get_attr: [nagios_mysql_password, value]}
            __hub_zero_version: { get_param: hub_zero_version }
            __email: { get_param: email_postmaster}
            __hostname: { get_param: hostname}
            __nagiosservers: {get_param: nagiosservers}
            __nectar_user_id: {get_param: nectar_user_id}
            __swift_password: {get_param: swift_password}
            __tenancy_name: {get_param: tenancy_name}
            __pgp_passphraze: {get_param: pgp_passphraze}
          template:
            get_file: https://raw.githubusercontent.com/V3-Alliance/HubZero_puppet/master/puppet/scripts/bootstrap.sh
      user_data_format: RAW


outputs:

  instance_ip:
    description: "The IP address of the instance:"
    value: { get_attr: [hubZero_instance, first_address] }

  instance_url:
    description: "The url of the instance:"
    value:
      str_replace:
        template: https://host
        params:
          host: { get_attr: [hubZero_instance, first_address] }

  instance_ssh:
    description: "A command to ssh into the instance:"
    value:
      str_replace:
        template: ssh debian@host -i ~/.ssh/key.pem
        params:
          host: { get_attr: [hubZero_instance, first_address] }
          key: { get_param: key }
